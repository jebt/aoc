optimizing day 7:
    original solution:
        Time in seconds to calculate the fuel cost in part two: 58.60893629999191
    added break when fuel cost exceeds the lowest option so far:
        Time in seconds to calculate the fuel cost in part two: 24.388494500002707

    added memoization hashmap with key distance and value fuel_cost:
        Time in seconds to calculate the fuel cost in part two: 0.4660009999934118



MISTAKE ON AOC.COM??
This polymer grows quickly. After step 5, it has length 97; After step 10, it has length 3073.
After step 10, B occurs 1749 times, C occurs 298 times, H occurs 191 times, and N occurs 865 times;
taking the quantity of the most common element (B, 1749) and subtracting the quantity of the least
common element (H, 161) produces 1749 - 161 = 1588.








        for y, row in enumerate(grid):
            for x, value in enumerate(row):
                if x > 0:
                    graph.add_edge((x, y), (x - 1, y), weight=grid[y][x - 1])
                if x < len(row) - 1:
                    graph.add_edge((x, y), (x + 1, y), weight=grid[y][x + 1])
                if y > 0:
                    graph.add_edge((x, y), (x, y - 1), weight=grid[y - 1][x])
                if y < len(grid) - 1:
                    graph.add_edge((x, y), (x, y + 1), weight=grid[y + 1][x])